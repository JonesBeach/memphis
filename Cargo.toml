[package]
name = "memphis"
version = "0.1.0"
edition = "2021"
license = "LGPL-3.0-or-later"
description = "A starter Python interpreter written in Rust."
repository = "https://github.com/JonesBeach/memphis"

[profile.release]
lto = true # Enable Link-Time Optimization for release builds

[lib]
# cdylib: compiles the code as a C-compatible dynamic library. Used when you want to link Rust code
# with other languages (like C or C++), or when you need to produce WebAssembly (Wasm) for use in
# JavaScript environments. When targeting Wasm, the `cdylib` crate type is required because it
# directs the Rust compiler to produce a binary compatible with the Wasm runtime, without including
# Rust-specific metadata and symbols that would otherwise be generated.

# rlib: compiles code as a Rust-specific library. The default library type that includes all Rust
# metadata, allowing for full compatibility when linking with other Rust crates. If you're only
# using your library in other Rust code, you donâ€™t usually need to specify crate-type = ["rlib"]
# explicitly, as this is the default. We only need it here because we specified `cdylib`.
crate-type = ["cdylib", "rlib"]

[dependencies]
crosscheck = { path = "./crosscheck", optional = true }
pyo3 = { version = "0.23", optional = true }
inkwell = { version = "0.4.0", features = ["llvm17-0"], optional = true }
crossterm = { version = "0.28.1", optional = true }
wasm-bindgen = { version = "0.2", optional = true }
console_error_panic_hook = { version = "0.1", optional = true }

[features]
c_stdlib = ["pyo3"]
stdlib = []
llvm_backend = ["inkwell"]
repl = ["crossterm"]
wasm = ["wasm-bindgen", "console_error_panic_hook"]
integration = ["crosscheck"]
